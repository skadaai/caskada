name: Publish TypeScript Package

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'typescript/**'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push tags and commit version updates
    environment: npm

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        working-directory: typescript
        run: pnpm install

      - name: Run Tests
        working-directory: typescript
        run: |
          node --import=tsx --experimental-test-snapshots --test-concurrency=1 --test tests/*.test.ts

      - name: Get current version
        id: current_version
        working-directory: typescript
        run: |
          CURRENT_VERSION=$(cat package.json | jq -r '.version')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Apply Version Updates
        id: version
        working-directory: typescript
        run: |
          # Force pnpm workspace recognition @ https://www.perplexity.ai/search/github-workflows-typescript-pu-2CcFkyNPSJ.fnCXbNF47RQ#0
          touch pnpm-workspace.yaml
          # Ensure package.json exists
          if [ ! -f "package.json" ]; then
            echo "Missing package.json file."
            exit 1
          fi
          pnpm dlx @changesets/cli version

          NEW_VERSION=$(cat package.json | jq -r '.version')
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          if [ "${{ steps.current_version.outputs.current_version }}" == "$NEW_VERSION" ]; then
            echo "No version change detected."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Version changed from ${{ steps.current_version.outputs.current_version }} to $NEW_VERSION"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Build Project
        if: steps.version.outputs.has_changes == 'true'
        working-directory: typescript
        run: pnpm build

      - name: Publish to npm
        if: steps.version.outputs.has_changes == 'true'
        working-directory: typescript
        run: pnpm publish --filter ./ --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit and push version bump
        if: steps.version.outputs.has_changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: update TS version and publish'
          file_pattern: 'typescript/package.json typescript/.changeset/* typescript/CHANGELOG.md'
          # The action defaults to pushing to the branch that triggered the workflow (main)
          # It also uses the github-actions[bot] user by default

      - name: Extract changelog text
        if: steps.version.outputs.has_changes == 'true'
        id: changelog_text
        run: |
          CHANGELOG_CONTENT=$(node .github/scripts/extract-changelog-text.js typescript ${{ steps.version.outputs.new_version }})
          echo "$CHANGELOG_CONTENT"
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.version.outputs.has_changes == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: typescript-v${{ steps.version.outputs.new_version }}
          release_name: TypeScript Package v${{ steps.version.outputs.new_version }}
          body: |
            ## Caskada TypeScript Package v${{ steps.version.outputs.new_version }}

            ${{ steps.changelog_text.outputs.changelog }}

            ### Installation

            npm install caskada@${{ steps.version.outputs.new_version }}
            pnpm add caskada@${{ steps.version.outputs.new_version }}
            yarn add caskada@${{ steps.version.outputs.new_version }}

            ### NPM Package
            ðŸ“¦ [View on NPM](https://www.npmjs.com/package/caskada/v/${{ steps.version.outputs.new_version }})
          draft: false
          prerelease: false

      - name: Notify Discord
        if: steps.version.outputs.has_changes == 'true' && env.DISCORD_WEBHOOK_URL != ''
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          node .github/scripts/discord-notify.js \
            "$DISCORD_WEBHOOK_URL" \
            "typescript" \
            "${{ steps.version.outputs.new_version }}" \
            "${{ steps.changelog_text.outputs.changelog }}" \
            "${{ github.server_url }}/${{ github.repository }}"
